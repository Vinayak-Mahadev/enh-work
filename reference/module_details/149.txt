149 INTSM020 - Organization Stock Detail

1=>  notifyInterfaceOnDump(ID, date(yyyy-MM-dd))

		1. Read the interfaceId and date as input parameters 
		2. InterfaceId should be present in DAILY_DUMP_INTERFACE_LIST
		3. Find the interface and create TR_DAILY_DUMP_SUMMARY with interfaceId and date
		4. After creating dump id will be consider as transaction Id

2 => pullDataToFile(interfaceIds)

	*
		1.	Read the interfaceIds as input parameters.
		2.	If the interface id is null or If any interface id object is not available in the database then throw the exception.
		3.	ASYNC_PULL_DATA_TO_FILE_INTERFACE_LIST
				3.1 Read the interfaceId as input parameters.
				3.2 Create PullDataToFileBean and load properties from InterfaceAttribute.
		4.  ASYNC_PULL_DATA_TO_FILE_FROM_MONGO_INTERFACE_LIST
				4.1 Load InitialContext from interfaces's converter.
				4.2 If DUMP_JOB_INTERFACE_IDS
					4.2.1 Get fileId from TR_INTERFACE_FILE_SUMMARY with interfaceId and current date.
					4.2.1 If fileId not present converter is invoked.
		5.  ASYNC_PULL_DATA_TO_FILE_AND_PUSH_INTERFACE_LIST
				5.1 Load InitialContext from interfaces's converter.
				5.2 converter will be invoked.
		6.  ASYNC_PULL_DATA_TO_FILE_FROM_EXCEL_INTERFACE_LIST
				5.1 Load InitialContext from interfaces's converter.
				5.2 converter will be invoked.
			
	 *
		1.  java:global/EnhancesysManagement/IntegrationServices/GenericDailyDump!com.enhancesys.integration.services.interfaces.processor.PullFromMongo
		2.  GenericDailyDump
			2.1 If interface is SELF_NOTIFY_INTERFACE_LIST then create entry in TR_DAILY_DUMP_SUMMARY.
			2.2 In each iteration for  TR_DAILY_DUMP_SUMMARY where status = availableDailyDumpStatus(1) and interfaceid
			2.3 If data is present then process will be contine otherwise it throw already dump file generated exception.
			2.4 Get dumpId and created date from TR_DAILY_DUMP_SUMMARY. 
			2.5 File's created name is current day-1.
			2.6 According to created date query will prepared.
			2.7 If, PG_DAILY_DUMP_INTERFACE_LIST
				2.7.1 Postgres Query get from interface attribute.
				2.7.2 Postgres Query executed and data will write according to configuration
			2.8 Else
				2.7.1 Mongodb Query get from interface attribute.
				2.7.2 Mongodb Query executed and data will write according to configuration
			2.9 tr_interface_summary will be created and TR_DAILY_DUMP_SUMMARY will be updated with status closedDailyDumpStatus(0)
			



3 =>  processFile(interfaceIds)		

		1.	Read the list of interfaceIds as input parameters.
		2.	Validate the interface ids list is null or not null.
		3.	If the interface ids list is null then throw the exception.
		4.	Otherwise get the all interface ids objects.
		5.	If any interface id object is not available in the database then throw the exception.
		6.	Otherwise, process the each and every interface object.
		7.	In each iteration,
			7.1	Get the attribute details of interface like host,port, user name, password, Local file path, and remove file path.
			7.2	Verify the transaction type.
			7.3	If the transaction type is "SEND".
				7.3.1	Call the sendFile service. Where send csv file then ctl file.
			7.4	If the transaction type is "RECEIVE".
				7.4.1	Call the receiveFile service. Where send ctl file then csv file.
			7.5	Update the status, acknowledgment, and dateTime in interface file summary.
		8. If the service (sendFile or receiveFile) call is failed, place the entry in TR_INTERFACE_FAILURE table with failure details.
		

note : no use of publisher