<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	default-lazy-init="true" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/jms 
        http://www.springframework.org/schema/jms/spring-jms.xsd
        http://cxf.apache.org/jaxrs 
        http://cxf.apache.org/schemas/jaxrs.xsd
        http://cxf.apache.org/core 
        http://cxf.apache.org/schemas/core.xsd
  		http://www.springframework.org/schema/context         
  		http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/data/mongo 
  		http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<context:component-scan base-package="com.enhancesys.jobengine.job.services.*" />
	<context:annotation-config />
	
	<bean id="failureQueue" class="java.util.concurrent.ArrayBlockingQueue">
		<constructor-arg type="int">
			<value>2</value>
		</constructor-arg>
	</bean>
	<bean id="propertiesLoader" class="com.enhancesys.jobengine.job.services.util.PropertiesLoader" />
	<bean id="inMemoryQueue" class="com.enhancesys.jobengine.job.services.queue.InMemoryQueue" factory-method="createBean" scope="prototype">
		<constructor-arg name="configData" value=""/> 
	</bean>
	<bean id="activeMQueue" class="com.enhancesys.jobengine.job.services.queue.ActiveMQueue" factory-method="createBean" scope="prototype">
		<constructor-arg name="configData" value=""/> 
	</bean>
	<bean id="jobConfigurationReader" class="com.enhancesys.jobengine.job.services.job.JobConfigurationReader"/>
	<bean id="jobEngine" class="com.enhancesys.jobengine.job.services.job.JobEngine"/>
	<bean id="jobPipeLine" class="com.enhancesys.jobengine.job.services.job.JobPipeLine" scope="prototype"/>
	
	<bean id="sampleProcessor" class="com.enhancesys.jobengine.job.services.processor.SampleProcessor" scope="prototype"/>
	<!--bean id="sampleDataProcessor" class="com.enhancesys.jobengine.job.services.processor.SampleDataProcessor" scope="prototype"/-->
	<bean id="dataTransformer" class="com.enhancesys.jobengine.job.services.processor.DataTransformer" scope="prototype"/>
	<bean id="fileDataProcessor" class="com.enhancesys.jobengine.job.services.processor.FileDataProcessor" scope="prototype"/>
	<bean id="mongoDataWriter" class="com.enhancesys.jobengine.job.services.processor.MongoDataWriter" scope="prototype"/>
	<bean id="activeMQDataPublisher" class="com.enhancesys.jobengine.job.services.processor.ActiveMQDataPublisher" scope="prototype"/>
	<bean id="postgresDataWriter" class="com.enhancesys.jobengine.job.services.processor.PostgresDataWriter" scope="prototype"/>
	<bean id="csvDataWriter" class="com.enhancesys.jobengine.job.services.processor.CSVDataWriter" scope="prototype"/>
	<bean id="csvDataListWriter" class="com.enhancesys.jobengine.job.services.processor.CSVDataListWriter" scope="prototype"/>
	<bean id="excelDataWriter" class="com.enhancesys.jobengine.job.services.processor.ExcelDataWriter" scope="prototype"/>
	<bean id="pdfDataWriter" class="com.enhancesys.jobengine.job.services.processor.PDFDataWriter" scope="prototype"/>
	<bean id="mongoDBDataFetcher" class="com.enhancesys.jobengine.job.services.processor.MongoDBDataFetcher" scope="prototype"/>
	<bean id="mongoDBPrimaryDataFetcher" class="com.enhancesys.jobengine.job.services.mongo.processor.MongoDBPrimaryDataFetcher" scope="prototype"/>
	<bean id="mongoDBSecondaryDataFetcher" class="com.enhancesys.jobengine.job.services.mongo.processor.MongoDBSecondaryDataFetcher" scope="prototype"/>
	<bean id="mongoDBPrimaryDataSortProcessor" class="com.enhancesys.jobengine.job.services.mongo.processor.MongoDBPrimaryDataSortProcessor" scope="prototype"/>
	<bean id="mongoDBSencodaryDataSortProcessor" class="com.enhancesys.jobengine.job.services.mongo.processor.MongoDBSencodaryDataSortProcessor" scope="prototype"/>
	<bean id="mongoDBPrimaryAggregateDataSortProcessor" class="com.enhancesys.jobengine.job.services.mongo.processor.MongoDBPrimaryAggregateDataSortProcessor" scope="prototype"/>
	<bean id="mongoDataUtil" class="com.enhancesys.jobengine.job.services.mongo.util.MongoDataUtil"/>
	<bean id="mongoConnectionUtil" class="com.enhancesys.jobengine.job.services.mongo.util.MongoConnectionUtil"/>
	<bean id="jdbcUtility" class="com.enhancesys.jobengine.job.services.pg.util.JdbcUtility"/>
	<bean id="postgresDBPrimaryDataFetcher" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBPrimaryDataFetcher" scope="prototype"/>
	<bean id="postgresDBSecondaryDataFetcher" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBSecondaryDataFetcher" scope="prototype"/>
	<bean id="postgresDBPrimaryDataSortProcessor" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBPrimaryDataSortProcessor" scope="prototype"/>
	<bean id="postgresDBSecondaryDataStrFetcher" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBSecondaryDataStrFetcher" scope="prototype"/>
	<bean id="postgresDBSecondaryDataSortProcessor" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBSecondaryDataSortProcessor" scope="prototype"/>
	<bean id="postgresDBPrimaryCartesianDataProcessor" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBPrimaryCartesianDataProcessor" scope="prototype"/>
	<bean id="postgresDBPrimaryDataListFetcher" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBPrimaryDataListFetcher" scope="prototype"/>
	<bean id="postgresDBSecondaryDataListFetcher" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBSecondaryDataListFetcher" scope="prototype"/>
	<bean id="postgresDBPrimaryCartesianDataListProcessor" class="com.enhancesys.jobengine.job.services.pg.processor.PostgresDBPrimaryCartesianDataListProcessor" scope="prototype"/>
	<bean id="jsonDataWriter" class="com.enhancesys.jobengine.job.services.processor.JSONDataWriter" scope="prototype"/>
	<bean id="util" class="com.enhancesys.jobengine.job.services.util.Util"/>

	<bean id="jdbcConnectionUtil" class="com.enhancesys.jobengine.job.services.pg.util.JdbcConnectionUtil">
		<constructor-arg name="driverClassName" value="${POSTGRES_JDBC_DRIVER}"/>
		<constructor-arg name="url" value="${POSTGRES_JDBC_URL}"/>
		<constructor-arg name="username" value="${POSTGRES_JDBC_USER}"/>
		<constructor-arg name="password" value="${POSTGRES_JDBC_PASS}"/>
		<constructor-arg name="socketTimeout" value="${POSTGRES_JDBC_SOCKET_TIMEOUT}"/>
	</bean>

	<!-- Mongo Template bean declaration.. Start -->
	<bean id="snoc-r1" class="com.enhancesys.jobengine.job.services.mongo.util.MongoTemplate">
		<constructor-arg name="userName" value="${MONGO_DB_USER}" />
		<constructor-arg name="password" value="${MONGO_DB_PASSWORD}" />
		<constructor-arg name="schemaName" value="${MONGO_DB_DATABASE}" />
		<constructor-arg name="maxConnection" value="${MONGO_CONNECTIONS_MAX}" />
		<constructor-arg name="connectionTimeOut" value="${MONGO_CONNECTION_TIMEOUT_MAX}" />
		<constructor-arg name="replicas" value="${MONGO_DB_IP1}:${MONGO_DB_PORT1}, ${MONGO_DB_IP2}:${MONGO_DB_PORT2}, ${MONGO_DB_IP3}:${MONGO_DB_PORT3}" />
	</bean>
	<bean id="snoc-r4" class="com.enhancesys.jobengine.job.services.mongo.util.MongoTemplate">
		<constructor-arg name="userName" value="${MONGO_DB_R4_USER}" />
		<constructor-arg name="password" value="${MONGO_DB_R4_PASSWORD}" />
		<constructor-arg name="schemaName" value="${MONGO_DB_R4_DATABASE}" />
		<constructor-arg name="maxConnection" value="${MONGO_CONNECTIONS_MAX}" />
		<constructor-arg name="connectionTimeOut" value="${MONGO_CONNECTION_TIMEOUT_MAX}" />
		<constructor-arg name="replicas" value="${MONGO_DB_IP4}:${MONGO_DB_PORT4}" />
	</bean>
	<bean id="snoc-r5" class="com.enhancesys.jobengine.job.services.mongo.util.MongoTemplate">
		<constructor-arg name="userName" value="${MONGO_DB_STANDALONE_USER}" />
		<constructor-arg name="password" value="${MONGO_DB_STANDALONE_PASSWORD}" />
		<constructor-arg name="schemaName"	value="${MONGO_DB_STANDALONE_DATABASE}" />
		<constructor-arg name="maxConnection" value="${MONGO_CONNECTIONS_MAX}" />
		<constructor-arg name="connectionTimeOut" value="${MONGO_CONNECTION_TIMEOUT_MAX}" />
		<constructor-arg name="replicas" value="${MONGO_DB_IP5}:${MONGO_DB_PORT5}" />
	</bean>
	<!-- Mongo Template bean declaration.. End -->
	
	<!-- Postgres Template bean declaration.. Start -->
	<bean id="dataSource" class="com.enhancesys.jobengine.job.services.pg.util.JDBCDataSource">
		<constructor-arg name="driverClassName" value="${POSTGRES_JDBC_DRIVER}"/>
		<constructor-arg name="url" value="${POSTGRES_JDBC_URL}"/>
		<constructor-arg name="username" value="${POSTGRES_JDBC_USER}"/>
		<constructor-arg name="password" value="${POSTGRES_JDBC_PASS}"/>
		<constructor-arg name="socketTimeout" value="${POSTGRES_JDBC_SOCKET_TIMEOUT}"/>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg name="dataSource" ref="dataSource"/>
	</bean>	
	<!-- Postgres Template bean decleartion.. End -->

	<bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${APPSERVER_CONF_PATH}/jobengineconf/common/jobConfiguration.properties</value>
			</list>
		</property>
	</bean>	
</beans>
