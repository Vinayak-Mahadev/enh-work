<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	default-lazy-init="true" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jms 
        http://www.springframework.org/schema/jms/spring-jms.xsd
        http://cxf.apache.org/jaxrs 
        http://cxf.apache.org/schemas/jaxrs.xsd
        http://cxf.apache.org/core 
        http://cxf.apache.org/schemas/core.xsd
  		http://www.springframework.org/schema/context         
  		http://www.springframework.org/schema/context/spring-context-3.0.xsd
  		http://www.springframework.org/schema/data/mongo 
  		http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
  		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!-- Spring Annotation Configurations Starts Here -->
	
	<context:component-scan base-package="com.enhancesys.interfaces.snoc.*" />
	<context:annotation-config />
	
	<!-- Spring Annotation Configurations Ends Here -->

	<!-- Spring Beans Configuration Starts Here -->

	<bean id="interfaceServicesActivator" class="com.enhancesys.interfaces.snoc.services.InterfaceServicesActivator" />
	<bean id="downloadProcessor" class="com.enhancesys.interfaces.snoc.services.InterfaceServicesDownloadProcessor" />
	<bean id="uploadProcessor" class="com.enhancesys.interfaces.snoc.services.InterfaceServicesUploadProcessor" />
	
	
	<!-- Spring Beans Configuration Ends Here -->

	<!-- JAX-RS Configurations Starts Here -->
	
	<jaxrs:server id="restContainer" address="/">
		<jaxrs:serviceBeans>
			<!-- This is where we tell which beans CXF should expose as Web-Services -->
			<ref bean="interfaceServicesActivator" />
		</jaxrs:serviceBeans>

		<jaxrs:extensionMappings>
			<entry key="xml" value="application/xml" />
			<entry key="json" value="application/json" />
		</jaxrs:extensionMappings>

		<jaxrs:providers>
			<bean class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
				<property name="dropRootElement" value="true" />
				<property name="supportUnwrapped" value="true" />
			</bean>
		</jaxrs:providers>
	</jaxrs:server>
	
	<!-- JAX-RS Configurations Ends Here -->
	
	
	<!--  <bean id="oracleDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="close" >
	   <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	   <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	   <property name="username" value="snd" />
	   <property name="password" value="oracle" />
	</bean> -->
	
	<!-- PostgresSQL Configurations starts Here -->
	<bean id="postgresDataSource" class="com.enhancesys.interfaces.snoc.util.JDBCDataSource" >
	   <constructor-arg name="url" value="${INTERFACE_JDBC_URL}" />
	   <constructor-arg name="driverClassName" value="org.postgresql.Driver" />
	   <constructor-arg name="username" value="${INTERFACE_JDBC_USER}" />
	   <constructor-arg name="password" value="${INTERFACE_JDBC_PASS}" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
		<property name="dataSource" ref="postgresDataSource"></property>  
	</bean>  

	<!-- PostgresSQL Configurations ends Here -->
	
	<bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">  
		<constructor-arg ref="postgresDataSource"/>
	</bean>  
	
	
	<!-- PropertyPlaceholder Configurations Starts Here -->
	
	<bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
		<property name="location" value="file:${INTERFACE_CONF_PATH}" />
	</bean>
	
	<!-- PropertyPlaceholder Configurations Ends Here -->
</beans>